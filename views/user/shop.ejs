<%- include("../../views/partials/user/header") %>

<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Mobile-Hub Shop">
    <meta name="keywords" content="Mobile-Hub, shop, ecommerce, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Mobile-Hub Shop | Purchase You Like</title>

    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Unbounded:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Unbounded:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Css Styles -->
    <link rel="stylesheet" href="css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="css/slicknav.min.css" type="text/css">
</head>
<style>
    :root {
    /* Primary colors */
    --color-primary: #2D2D2D; /* Charcoal Gray */
    --color-primary-light: #5C5C5C; /* Lighter gray for hover states */
    --color-primary-dark: #1A1A1A; /* Darker shade for depth */
    --color-secondary: #2B3A55; /* Dark Slate Blue */
    --color-secondary-light: #4A5675; /* Lighter slate blue for gradients */
    --color-secondary-dark: #1b1f2ac7; /* Darker slate blue for gradients */
    
    /* Status and accent colors */
    --color-success: #1B5E5A; /* Deep Teal for discounts */
    --color-warning: #E9C46A; /* Unchanged, warm yellow */
    --color-danger: #E76F51; /* Unchanged, coral red */
    
    /* Neutral colors */
    --color-light: #F8F9FA;
    --color-dark: #212529;
    --color-gray-100: #F8F9FA;
    --color-gray-200: #E9ECEF;
    --color-gray-300: #DEE2E6;
    --color-gray-400: #CED4DA;
    --color-gray-500: #ADB5BD;
    --color-gray-600: #6C757D;
    --color-gray-700: #495057;
    --color-gray-800: #343A40;
    --color-gray-900: #212529;
    --color-text: #333333;
    
    /* UI effects */
    --box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
    --transition: all 0.3s ease;
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-dark) 100%);
    --gradient-secondary: linear-gradient(135deg, var(--color-secondary) 0%, var(--color-secondary-dark) 100%);
}

body {
    overflow-x: hidden;
    font-family: 'Poppins', sans-serif;
    background-color: #F9FAFB;
    color: var(--color-text);
}

li:hover {
    color: var(--color-secondary);
}

/* Breadcrumb styles */
.breadcrumb {
    max-width: 1300px;
    margin: 20px auto 30px;
    padding: 12px 25px;
    display: flex;
    align-items: center;
    background: white;
    border-radius: 8px;
    border: 1px solid var(--color-gray-200);
    font-family: 'Poppins', sans-serif;
    position: relative;
}

.breadcrumb a {
    color: var(--color-gray-600);
    text-decoration: none;
    font-size: 14px;
    font-weight: 500;
    transition: var(--transition);
    display: flex;
    align-items: center;
    gap: 6px;
}

.breadcrumb a:hover {
    color: var(--color-secondary);
}

.breadcrumb span {
    color: var(--color-gray-400);
    margin: 0 10px;
    font-size: 14px;
}

.breadcrumb span:last-child,
.breadcrumb-active {
    color: var(--color-primary);
    font-weight: 600;
    font-size: 14px;
}

/* Responsive breadcrumb */
@media (max-width: 768px) {
    .breadcrumb {
        margin: 15px 10px 20px;
        padding: 10px 15px;
        flex-wrap: wrap;
    }

    .breadcrumb a,
    .breadcrumb span,
    .breadcrumb-active {
        font-size: 13px;
    }
}

.product-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
    flex-grow: 1;
    margin-bottom: 25px;
}

.product-item {
    display: flex;
    align-items: center;
    background: white;
    padding: 20px;
    border-radius: 12px;
    position: relative;
    transition: var(--transition);
}

.product-item:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.product-image {
    position: relative;
}

.product-image img {
    width: 190px;
    height: auto;
    border-radius: 8px;
    transition: var(--transition);
}

.product-item:hover .product-image img {
    /* transform: scale(1.02); */
}

.product-details {
    margin-left: 25px;
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 8px;
    padding: 10px 0;
}

.product-name {
    font-family: 'Poppins', sans-serif;
    font-size: 18px;
    font-weight: 600;
    color: var(--color-primary);
    margin: 0;
    line-height: 1.3;
    transition: var(--transition);
}

.product-item:hover .product-name {
    color: var(--color-secondary);
}

.product-brand {
    font-family: 'Poppins', sans-serif;
    font-size: 14px;
    font-weight: 500;
    color: var(--color-gray-600);
    line-height: 1.4;
}

.price-container {
    display: flex;
    flex-direction: column;
    gap: 6px;
    margin: 8px 0;
    padding-top: 8px;
    border-top: 1px solid var(--color-gray-200);
}

.price-info {
    display: flex;
    align-items: center;
    gap: 10px;
    flex-wrap: wrap;
}

.final-price {
    font-family: 'Poppins', sans-serif;
    font-size: 20px;
    font-weight: 700;
    color: var(--color-secondary);
}

.regular-price {
    font-family: 'Poppins', sans-serif;
    font-size: 14px;
    font-weight: 500;
    color: var(--color-gray-500);
    text-decoration: line-through;
}

.discount-percentage {
    font-family: 'Poppins', sans-serif;
    font-size: 14px;
    font-weight: 600;
    color: var(--color-success);
}

.offer-badge {
    font-family: 'Poppins', sans-serif;
    font-size: 12px;
    font-weight: 500;
    color: rgb(63, 59, 59);
    background: rgba(65, 165, 77, 0.127);
    padding: 4px 10px;
    border-radius: 12px;
    line-height: 2;
    margin-top: 4px;
}

.delivery-info {
    font-family: 'Poppins', sans-serif;
    font-size: 13px;
    font-weight: 500;
    color: var(--color-gray-600);
    margin: 4px 0 8px;
}

.wishlist-icon {
    position: relative;
    color: var(--color-gray-400);
    font-size: 18px;
    cursor: pointer;
    transition: var(--transition);
    display: inline-block;
    margin-top: 10px;
    padding: 5px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.8);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.wishlist-icon:hover {
    color: var(--color-secondary);
}

.wishlist-icon.active {
    color: var(--color-secondary);
}

.wishlist-icon::after {
    content: 'Add to wishlist';
    position: absolute;
    top: -35px;
    right: 0;
    background: var(--gradient-primary);
    color: white;
    padding: 5px 10px;
    border-radius: 6px;
    font-size: 12px;
    opacity: 0;
    transition: var(--transition);
    pointer-events: none;
    white-space: nowrap;
}

.wishlist-icon:hover::after {
    opacity: 1;
}

.wishlist-icon.active::after {
    content: 'Remove from wishlist';
}

.rating {
    color: #E8B923; /* Soft Gold for ratings */
}

.add-to-cart {
    background: var(--gradient-secondary);
    color: white;
    border: none;
    padding: 8px 16px;
    cursor: pointer;
    border-radius: 8px;
    font-family: 'Poppins', sans-serif;
    font-size: 14px;
    font-weight: 500;
    transition: var(--transition);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}

.add-to-cart:hover {
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);

}

.product-actions {
    display: flex;
    gap: 15px;
    margin-top: 8px;
}

.no-products-message {
    text-align: center;
    padding: 40px;
    font-size: 18px;
    color: var(--color-gray-600);
    background: var(--color-light);
    border-radius: 10px;
    margin: 20px 0;
    grid-column: 1 / -1;
    box-shadow: var(--box-shadow);
}

/* Pagination */
.product__pagination {
    padding: 30px 0;
    text-align: center;
}

.product__pagination a {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border: 1px solid var(--color-gray-200);
    font-size: 14px;
    font-weight: 600;
    color: var(--color-gray-600);
    text-align: center;
    margin-right: 5px;
    transition: var(--transition);
    border-radius: 50%;
}

.product__pagination a:hover {
    background: var(--color-secondary);
    border-color: var(--color-secondary);
    color: white;
}

.product__pagination a.active {
    background: var(--color-secondary);
    border-color: var(--color-secondary);
    color: white;
}

.product__pagination a i {
    font-weight: 600;
}

/* Active filters */
.active-filters {
    padding: 15px;
    background: white;
    border-radius: 10px;
    margin-bottom: 20px;
    border: 1px solid var(--color-gray-200);
}

.filter-label {
    font-weight: 600;
    margin-right: 10px;
    color: var(--color-primary);
}

.filter-tag {
    background: var(--gradient-secondary);
    color: white;
    padding: 5px 12px;
    border-radius: 20px;
    font-size: 14px;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 5px;
}

.filter-tag .remove-filter {
    cursor: pointer;
    font-size: 18px;
    margin-left: 5px;
    transition: var(--transition);
}

.filter-tag .remove-filter:hover {
    color: white;

}

#activeFilters {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    align-items: center;
}

.product-link {
    display: block;
    width: 100%;
    cursor: pointer;
}

.product-link:hover {
    text-decoration: none;
    color: inherit;
}

/* Shop sidebar */
.shop__sidebar {
    padding: 20px;
    background-color: white;
    border-radius: 12px;
    margin-bottom: 30px;
}

.shop__sidebar__search form {
    position: relative;
    margin-bottom: 25px;
}

.shop__sidebar__search input {
    width: 100%;
    padding: 12px 45px 12px 15px;
    border: 1px solid var(--color-gray-200);
    border-radius: 8px;
    font-size: 14px;
    transition: var(--transition);
}

.shop__sidebar__search input:focus {
    outline: none;
    border-color: var(--color-secondary);
}

.shop__sidebar__search button {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: var(--color-gray-500);
    cursor: pointer;
}

.shop__sidebar__search button:hover {
    color: var(--color-secondary);
}

.card {
    border: none;
    margin-bottom: 20px;
    background: transparent;
}

.card-heading {
    margin-bottom: 15px;
}

.card-heading a {
    font-family: 'Unbounded', sans-serif;
    font-size: 16px;
    font-weight: 600;
    color: var(--color-primary);
    display: block;
    position: relative;
    padding-bottom: 10px;
    border-bottom: 1px solid var(--color-gray-200);
}

.shop__sidebar__categories ul,
.shop__sidebar__brand ul,
.shop__sidebar__price ul {
    list-style: none;
    padding: 0;
}

.shop__sidebar__categories ul li,
.shop__sidebar__brand ul li,
.shop__sidebar__price ul li {
    margin-bottom: 10px;
}

.shop__sidebar__categories ul li a,
.shop__sidebar__brand ul li a,
.shop__sidebar__price ul li a {
    color: var(--color-gray-600);
    text-decoration: none;
    font-size: 14px;
    transition: var(--transition);
    display: block;
    padding: 8px 0;
}

.shop__sidebar__categories ul li a:hover,
.shop__sidebar__brand ul li a:hover,
.shop__sidebar__price ul li a:hover,
.shop__sidebar__categories ul li a.active,
.shop__sidebar__brand ul li a.active,
.shop__sidebar__price ul li a.active {
    color: black;
    padding-left: 5px;
}

.shop__product__option {
    margin-bottom: 30px;
}

.shop__product__option__left p {
    color: var(--color-gray-600);
}
</style>

<body>
    <nav class="breadcrumb">
        <a href="/home">
            <i class="fas fa-home" style="margin-right: 5px;"></i>
            Home
        </a>
        <span>›</span>
        <span class="breadcrumb-active">Shop</span>
    </nav>
    <!-- Breadcrumb Section End -->

    <!-- Shop Section Begin -->
    <section class="shop spad">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3">
                    <div class="shop__sidebar">
                        <div class="shop__sidebar__search">
                            <form id="searchForm" onsubmit="return false;">
                                <input type="text" id="searchInput" placeholder="Search products...">
                                <button type="submit"><span class="icon_search"></span></button>
                            </form>
                        </div>
                        <div class="shop__sidebar__accordion">
                            <div class="accordion" id="accordionExample">
                                <div class="card">
                                    <div class="card-heading">
                                        <a data-toggle="collapse" data-target="#collapseOne">Categories</a>
                                    </div>
                                    <div id="collapseOne" class="collapse show" data-parent="#accordionExample">
                                        <div class="card-body">
                                            <div class="shop__sidebar__categories">
                                                <ul class="nice-scroll">
                                                    <li><a href="#"
                                                            class="category-link <%= !category ? 'active' : '' %>"
                                                            data-category="">All Products</a></li>
                                                    <% categories.forEach(cat=> { %>
                                                        <li><a href="#"
                                                                class="category-link <%= category === cat.name ? 'active' : '' %>"
                                                                data-category="<%= cat.name %>">
                                                                <%= cat.name %>
                                                            </a></li>
                                                        <% }) %>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card">
                                    <div class="card-heading">
                                        <a data-toggle="collapse" data-target="#collapseTwo">Branding</a>
                                    </div>
                                    <div id="collapseTwo" class="collapse show" data-parent="#accordionExample">
                                        <div class="card-body">
                                            <div class="shop__sidebar__brand">
                                                <ul>
                                                    <li><a href="#" class="brand-link"
                                                            data-brand="Samsung">Samsung</a></li>
                                                    <li><a href="#" class="brand-link" data-brand="Apple">Apple</a>
                                                    </li>
                                                    <li><a href="#" class="brand-link"
                                                            data-brand="Xiaomi">Xiaomi</a></li>
                                                    <li><a href="#" class="brand-link" data-brand="Vivo">Vivo</a>
                                                    </li>
                                                    <li><a href="#" class="brand-link"
                                                            data-brand="OnePlus">OnePlus</a></li>
                                                    <li><a href="#" class="brand-link" data-brand="Oppo">Oppo</a>
                                                    </li>
                                                    <li><a href="#" class="brand-link"
                                                            data-brand="Google">Google</a></li>
                                                    <li><a href="#" class="brand-link"
                                                            data-brand="Nothing">Nothing</a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card">
                                    <div class="card-heading">
                                        <a data-toggle="collapse" data-target="#collapseThree">Filter Price</a>
                                    </div>
                                    <div id="collapseThree" class="collapse show" data-parent="#accordionExample">
                                        <div class="card-body">
                                            <div class="shop__sidebar__price">
                                                <ul>
                                                    <li>
                                                        <a href="#"
                                                            class="price-filter <%= (!priceMin && !priceMax) ? 'active' : '' %>"
                                                            data-min="" data-max="">All Prices</a>
                                                    </li>
                                                    <li>
                                                        <a href="#"
                                                            class="price-filter <%= (priceMin == 15000 && priceMax == 25000) ? 'active' : '' %>"
                                                            data-min="15000" data-max="25000">₹15,000 - ₹25,000</a>
                                                    </li>
                                                    <li>
                                                        <a href="#"
                                                            class="price-filter <%= (priceMin == 25000 && priceMax == 35000) ? 'active' : '' %>"
                                                            data-min="25000" data-max="35000">₹25,000 - ₹35,000</a>
                                                    </li>
                                                    <li>
                                                        <a href="#"
                                                            class="price-filter <%= (priceMin == 35000 && priceMax == 50000) ? 'active' : '' %>"
                                                            data-min="35000" data-max="50000">₹35,000 - ₹50,000</a>
                                                    </li>
                                                    <li>
                                                        <a href="#"
                                                            class="price-filter <%= (priceMin == 50000) ? 'active' : '' %>"
                                                            data-min="50000" data-max="">₹50,000+</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-9">
                    <div class="shop__product__option">
                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="shop__product__option__left">
                                    <p>Showing 1–12 of 126 results</p>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-12">
                                <div class="active-filters">
                                    <span class="filter-label">Active Filters:</span>
                                    <div id="activeFilters" class="d-inline-flex flex-wrap gap-2">
                                        <!-- Filters will be added here dynamically -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row" id="productsContainer">
                        <% products.forEach(product => { %>
                            <div class="product-container" data-product-name="<%= product.productName.toLowerCase() %>" data-category="<%= product.category %>">
                              <a href="/product/<%= product._id %>" class="product-link" style="text-decoration: none; color: inherit;" onclick="navigateToProduct(event, '<%= product._id %>')">
                                <div class="product-item">
                                  <div class="product-image">
                                    <img src="/Uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                                    <i class="fa fa-heart wishlist-icon" onclick="handleWishlist(event, '<%= product._id %>')" title="Add to wishlist"></i>
                                  </div>
                                  <div class="product-details">
                                    <h class="product-name"><%= product.productName %></h>
                                    <span class="product-brand"><%= product.brand %></span>
                                    <div class="price-container">
                                      <% if (product.bestOffer) { %>
                                        <div class="price-info">
                                          <span class="final-price"><span>₹</span><%= product.finalPrice.toLocaleString() %></span>
                                          <span class="regular-price">₹<%= product.regularPrice.toLocaleString() %></span>
                                          <span class="discount-percentage"><%= product.discountPercentage %>% off</span>
                                        </div>
                                        <span class="offer-badge">Offer: <%= product.bestOffer.offerName %></span>
                                      <% } else if (product.originalPrice && product.originalPrice > product.salePrice) { %>
                                        <div class="price-info">
                                          <span class="final-price"><span>₹</span><%= product.salePrice.toLocaleString() %></span>
                                          <span class="regular-price">₹<%= product.originalPrice.toLocaleString() %></span>
                                          <span class="discount-percentage">
                                            <%= Math.round(((product.originalPrice - product.salePrice) / product.originalPrice) * 100) %>% off
                                          </span>
                                        </div>
                                      <% } else { %>
                                        <div class="price-info">
                                          <span class="final-price"><span>₹</span><%= product.salePrice.toLocaleString() %></span>
                                        </div>
                                      <% } %>
                                    </div>
                                    <!-- <p class="delivery-info">FREE delivery</p> -->
                                    <div class="product-actions">
                                      <button class="add-to-cart" onclick="handleAddToCart(event, '<%= product._id %>', '<%= product.bestOffer ? product.finalPrice : (product.offerPrice || product.salePrice) %>')">Add to Cart</button>
                                    </div>
                                  </div>
                                </div>
                              </a>
                            </div>
                          <% }) %>
                    </div>

                    <div class="row">
                        <div class="col-lg-12">
                            <div class="product__pagination">
                                <% if (currentPage> 1) { %>
                                    <a href="?page=<%= currentPage - 1 %>"><i class="fa fa-angle-left"></i></a>
                                    <% } %>
                                        <% for(let i=1; i <=totalPages; i++) { %>
                                            <% if (i===currentPage) { %>
                                                <a class="active" href="?page=<%= i %>">
                                                    <%= i %>
                                                </a>
                                                <% } else { %>
                                                    <a href="?page=<%= i %>">
                                                        <%= i %>
                                                    </a>
                                                    <% } %>
                                                        <% } %>
                                                            <% if (currentPage < totalPages) { %>
                                                                <a href="?page=<%= currentPage + 1 %>"><i
                                                                        class="fa fa-angle-right"></i></a>
                                                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- Shop Section End -->

        <!-- Js Plugins -->
        <script src="js/jquery-3.3.1.min.js"></script>
        <script src="js/bootstrap.min.js"></script>
        <script src="js/jquery.nice-select.min.js"></script>
        <script src="js/jquery.nicescroll.min.js"></script>
        <script src="js/jquery.magnific-popup.min.js"></script>
        <script src="js/jquery.countdown.min.js"></script>
        <script src="js/jquery.slicknav.js"></script>
        <script src="js/mixitup.min.js"></script>
        <script src="js/owl.carousel.min.js"></script>
        <script src="js/main.js"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script>
           document.getElementById('searchInput').addEventListener('input', function () {
    const searchTerm = this.value.trim();
    fetch(`/shop/live-search?query=${encodeURIComponent(searchTerm)}`)
        .then(response => response.json())
        .then(data => {
            const productsContainer = document.getElementById('productsContainer');
            productsContainer.innerHTML = '';
            if (data.products.length === 0) {
                productsContainer.innerHTML = '<div class="col-12 text-center"><p class="no-products-message">No products found.</p></div>';
            } else {
                data.products.forEach(product => {
                    const productHTML = `
                        <div class="product-container" data-product-name="${product.productName.toLowerCase()}" data-category="${product.category}">
                            <a href="/product/${product._id}" class="product-link" style="text-decoration: none; color: inherit;" onclick="navigateToProduct(event, '${product._id}')">
                                <div class="product-item">
                                    <div class="product-image">
                                        <img src="/Uploads/product-images/${product.productImage[0]}" alt="${product.productName}">
                                        <i class="fa fa-heart wishlist-icon" onclick="handleWishlist(event, '${product._id}')" title="Add to wishlist"></i>
                                    </div>
                                    <div class="product-details">
                                        <h class="product-name">${product.productName}</h>
                                        <span class="product-brand">${product.brand}</span>
                                        <div class="price-container">
                                            ${
                                                product.bestOffer
                                                    ? `
                                                        <div class="price-info">
                                                            <span class="final-price"><span>₹</span>${product.finalPrice.toLocaleString()}</span>
                                                            <span class="regular-price">₹${product.regularPrice.toLocaleString()}</span>
                                                            <span class="discount-percentage">${product.discountPercentage}% off</span>
                                                        </div>
                                                        <span class="offer-badge">Offer: ${product.bestOffer.offerName}</span>
                                                    `
                                                    : product.originalPrice && product.originalPrice > product.salePrice
                                                        ? `
                                                            <div class="price-info">
                                                                <span class="final-price"><span>₹</span>${product.salePrice.toLocaleString()}</span>
                                                                <span class="regular-price">₹${product.originalPrice.toLocaleString()}</span>
                                                                <span class="discount-percentage">
                                                                    ${Math.round(((product.originalPrice - product.salePrice) / product.originalPrice) * 100)}% off
                                                                </span>
                                                            </div>
                                                        `
                                                        : `
                                                            <div class="price-info">
                                                                <span class="final-price"><span>₹</span>${product.salePrice.toLocaleString()}</span>
                                                            </div>
                                                        `
                                            }
                                        </div>
                                        <p class="delivery-info">FREE delivery</p>
                                        <div class="product-actions">
                                            <button class="add-to-cart" onclick="handleAddToCart(event, '${product._id}', '${product.bestOffer ? product.finalPrice : (product.offerPrice || product.salePrice)}')">Add to Cart</button>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>`;
                    productsContainer.innerHTML += productHTML;
                });

                document.querySelectorAll('.product-container').forEach(container => {
                    container.addEventListener('click', function(e) {
                        if (!e.target.closest('.add-to-cart') && !e.target.closest('.wishlist-icon')) {
                            const link = this.querySelector('a.product-link');
                            if (link) {
                                window.location.href = link.getAttribute('href');
                            }
                        }
                    });
                });
            }
        })
        .catch(error => console.error('Search error:', error));
});

            document.querySelectorAll('.brand-link').forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();
                    document.querySelectorAll('.brand-link').forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                    const selectedBrand = this.dataset.brand;
                    const url = new URL(window.location.href);
                    if (selectedBrand) {
                        url.searchParams.set('brand', selectedBrand);
                    } else {
                        url.searchParams.delete('brand');
                    }
                    url.searchParams.set('page', '1');
                    window.history.pushState({}, '', url);
                    const productsContainer = document.getElementById('productsContainer');
                    productsContainer.innerHTML = '<div class="col-12 text-center"><p>Loading products...</p></div>';
                    fetchProducts();
                });
            });

            document.querySelectorAll('.category-link').forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();
                    document.querySelectorAll('.category-link').forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                    const selectedCategory = this.dataset.category;
                    const url = new URL(window.location.href);
                    if (selectedCategory) {
                        url.searchParams.set('category', selectedCategory);
                    } else {
                        url.searchParams.delete('category');
                    }
                    url.searchParams.set('page', '1');
                    window.history.pushState({}, '', url);
                    const productsContainer = document.getElementById('productsContainer');
                    productsContainer.innerHTML = '<div class="col-12 text-center"><p>Loading products...</p></div>';
                    fetchProducts();
                });
            });

            document.querySelectorAll('.price-filter').forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();
                    document.querySelectorAll('.price-filter').forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                    const min = this.dataset.min;
                    const max = this.dataset.max;
                    const url = new URL(window.location.href);
                    if (min) {
                        url.searchParams.set('priceMin', min);
                    } else {
                        url.searchParams.delete('priceMin');
                    }
                    if (max) {
                        url.searchParams.set('priceMax', max);
                    } else {
                        url.searchParams.delete('priceMax');
                    }
                    url.searchParams.set('page', '1');
                    window.history.pushState({}, '', url);
                    const productsContainer = document.getElementById('productsContainer');
                    productsContainer.innerHTML = '<div class="col-12 text-center"><p>Loading products...</p></div>';
                    fetchProducts();
                });
            });

            function fetchProducts() {
                const url = new URL(window.location.href);
                const search = url.searchParams.get('search') || '';
                const sort = url.searchParams.get('sort') || 'newest';
                const page = url.searchParams.get('page') || 1;
                const category = url.searchParams.get('category') || '';
                const brand = url.searchParams.get('brand') || '';
                const priceMin = url.searchParams.get('priceMin') || '';
                const priceMax = url.searchParams.get('priceMax') || '';
                const apiUrl = `/search?search=${encodeURIComponent(search)}&sort=${sort}&page=${page}&category=${encodeURIComponent(category)}&brand=${encodeURIComponent(brand)}&priceMin=${priceMin}&priceMax=${priceMax}`;
                const productsContainer = document.getElementById('productsContainer');
                productsContainer.innerHTML = '<div class="col-12 text-center"><p>Loading products...</p></div>';
                fetch(apiUrl)
                    .then(response => response.json())
                    .then(data => {
                        updateProducts(data);
                        updateActiveFilters();
                    })
                    .catch(error => {
                        console.error('Error fetching products:', error);
                        productsContainer.innerHTML = '<div class="col-12 text-center"><p>Error loading products. Please try again.</p></div>';
                    });
            }
            function updateProducts(data) {
  const container = document.getElementById('productsContainer');
  container.innerHTML = '';
  if (!data.products || data.products.length === 0) {
    container.innerHTML = '<div class="col-12 text-center"><p>No products found.</p></div>';
    return;
  }
  data.products.forEach(product => {
    const productHtml = `
      <div class="product-container" data-product-name="${product.productName.toLowerCase()}" data-category="${product.category}">
        <a href="/product/${product._id}" class="product-link" style="text-decoration: none; color: inherit;" onclick="navigateToProduct(event, '${product._id}')">
          <div class="product-item">
            <div class="product-image">
              <img src="/Uploads/product-images/${product.productImage[0]}" alt="${product.productName}">
              <i class="fa fa-heart wishlist-icon" onclick="handleWishlist(event, '${product._id}')" title="Add to wishlist"></i>
            </div>
            <div class="product-details">
              <h class="product-name">${product.productName}</h>
              <span class="product-brand">${product.brand}</span>
              <div class="price-container">
                ${
                  product.bestOffer
                    ? `
                      <div class="price-info">
                        <span class="final-price"><span>₹</span>${product.finalPrice.toLocaleString()}</span>
                        <span class="regular-price">₹${product.regularPrice.toLocaleString()}</span>
                        <span class="discount-percentage">${product.discountPercentage}% off</span>
                      </div>
                      <span class="offer-badge">Offer: ${product.bestOffer.offerName}</span>
                    `
                    : product.originalPrice && product.originalPrice > product.salePrice
                      ? `
                        <div class="price-info">
                          <span class="final-price"><span>₹</span>${product.salePrice.toLocaleString()}</span>
                          <span class="regular-price">₹${product.originalPrice.toLocaleString()}</span>
                          <span class="discount-percentage">
                            ${Math.round(((product.originalPrice - product.salePrice) / product.originalPrice) * 100)}% off
                          </span>
                        </div>
                      `
                      : `
                        <div class="price-info">
                          <span class="final-price"><span>₹</span>${product.salePrice.toLocaleString()}</span>
                        </div>
                      `
                }
              </div>
              <p class="delivery-info">FREE delivery</p>
              <div class="product-actions">
                <button class="add-to-cart" onclick="handleAddToCart(event, '${product._id}', '${product.bestOffer ? product.finalPrice : (product.offerPrice || product.salePrice)}')">Add to Cart</button>
              </div>
            </div>
          </div>
        </a>
      </div>
    `;
    container.innerHTML += productHtml;
  });
  document.querySelectorAll('.product-container').forEach(container => {
    container.addEventListener('click', function(e) {
      if (!e.target.closest('.add-to-cart') && !e.target.closest('.wishlist-icon')) {
        const link = this.querySelector('a.product-link');
        if (link) {
          window.location.href = link.getAttribute('href');
        }
      }
    });
  });
  const productCountElement = document.querySelector('.shop__product__option__left p');
  if (productCountElement) {
    productCountElement.textContent =
      `Showing ${((data.currentPage - 1) * 8) + 1}–${Math.min(data.currentPage * 8, data.totalProducts)} of ${data.totalProducts} results`;
  }
  updatePagination(data.totalPages, data.currentPage);
}
         
            function updatePagination(totalPages, currentPage) {
                const container = document.querySelector('.product__pagination');
                if (!container) return;
                container.innerHTML = '';
                if (totalPages <= 1) return;
                if (currentPage > 1) {
                    container.innerHTML += `<a href="#" onclick="changePage(${currentPage - 1})"><i class="fa fa-angle-left"></i></a>`;
                }
                for (let i = 1; i <= totalPages; i++) {
                    container.innerHTML += `
            <a href="#" class="${i === currentPage ? 'active' : ''}" 
               onclick="changePage(${i})">${i}</a>
        `;
                }
                if (currentPage < totalPages) {
                    container.innerHTML += `<a href="#" onclick="changePage(${currentPage + 1})"><i class="fa fa-angle-right"></i></a>`;
                }
            }

            function changePage(page) {
                const url = new URL(window.location.href);
                url.searchParams.set('page', page);
                window.history.pushState({}, '', url);
                fetchProducts();
            }

            function updateActiveFilters() {
                const url = new URL(window.location.href);
                const category = url.searchParams.get('category');
                const brand = url.searchParams.get('brand');
                const search = url.searchParams.get('search');
                const priceMin = url.searchParams.get('priceMin');
                const priceMax = url.searchParams.get('priceMax');
                const activeFiltersContainer = document.getElementById('activeFilters');
                activeFiltersContainer.innerHTML = '';
                if (category) {
                    const categoryFilter = document.createElement('span');
                    categoryFilter.className = 'filter-tag';
                    categoryFilter.innerHTML = `
            Category: ${category}
            <span class="remove-filter" onclick="removeFilter('category')">×</span>
        `;
                    activeFiltersContainer.appendChild(categoryFilter);
                }
                if (brand) {
                    const brandFilter = document.createElement('span');
                    brandFilter.className = 'filter-tag';
                    brandFilter.innerHTML = `
            Brand: ${brand}
            <span class="remove-filter" onclick="removeFilter('brand')">×</span>
        `;
                    activeFiltersContainer.appendChild(brandFilter);
                }
                if (priceMin || priceMax) {
                    const priceFilter = document.createElement('span');
                    priceFilter.className = 'filter-tag';
                    let priceText = '';
                    if (priceMin && priceMax) {
                        priceText = `₹${parseInt(priceMin).toLocaleString()} - ₹${parseInt(priceMax).toLocaleString()}`;
                    } else if (priceMin) {
                        priceText = `₹${parseInt(priceMin).toLocaleString()}+`;
                    }
                    priceFilter.innerHTML = `
            Price: ${priceText}
            <span class="remove-filter" onclick="removeFilter('price')">×</span>
        `;
                    activeFiltersContainer.appendChild(priceFilter);
                }
                if (search) {
                    const searchFilter = document.createElement('span');
                    searchFilter.className = 'filter-tag';
                    searchFilter.innerHTML = `
            Search: "${search}"
            <span class="remove-filter" onclick="removeFilter('search')">×</span>
        `;
                    activeFiltersContainer.appendChild(searchFilter);
                }
                const activeFiltersSection = document.querySelector('.active-filters');
                if (category || brand || search || priceMin || priceMax) {
                    activeFiltersSection.style.display = 'block';
                } else {
                    activeFiltersSection.style.display = 'none';
                }
            }

            function removeFilter(filterType) {
                const url = new URL(window.location.href);
                if (filterType === 'price') {
                    url.searchParams.delete('priceMin');
                    url.searchParams.delete('priceMax');
                    document.querySelectorAll('.price-filter').forEach(link => {
                        link.classList.remove('active');
                        if (!link.dataset.min && !link.dataset.max) {
                            link.classList.add('active');
                        }
                    });
                } else {
                    url.searchParams.delete(filterType);
                    if (filterType === 'category') {
                        document.querySelectorAll('.category-link').forEach(link => {
                            link.classList.remove('active');
                            if (!link.dataset.category) {
                                link.classList.add('active');
                            }
                        });
                    } else if (filterType === 'brand') {
                        document.querySelectorAll('.brand-link').forEach(link => {
                            link.classList.remove('active');
                            if (!link.dataset.brand) {
                                link.classList.add('active');
                            }
                        });
                    }
                }
                url.searchParams.set('page', '1');
                window.history.pushState({}, '', url);
                fetchProducts();
            }

            function handleWishlist(event, productId) {
    event.preventDefault();
    event.stopPropagation();

    const wishlistIcon = event.target;

    // Check if user is authenticated
    fetch('/check-auth', {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' }
    })
    .then(response => response.json())
    .then(data => {
        if (!data.isAuthenticated) {
            Swal.fire({
                icon: 'warning',
                title: 'Please Login',
                text: 'You need to login to add items to your wishlist',
                showCancelButton: true,
                confirmButtonText: 'Login Now',
                cancelButtonText: 'Later'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/login';
                }
            });
            return;
        }

        const isAlreadyInWishlist = wishlistIcon.classList.contains('active');

        if (isAlreadyInWishlist) {
            // Remove from wishlist
            fetch(`/wishlists/remove/${productId}`, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    wishlistIcon.classList.remove('active');
                    wishlistIcon.title = 'Add to wishlist';
                    Swal.fire('Removed from Wishlist', '', 'success');
                } else {
                    Swal.fire('Error', data.message || 'Failed to remove from wishlist', 'error');
                }
            })
            .catch(error => {
                console.error('Error removing from wishlist:', error);
                Swal.fire('Error', 'Unable to connect to the server. Please try again later.', 'error');
            });
        } else {
            // Add to wishlist
            fetch('/wishlists/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    wishlistIcon.classList.add('active');
                    wishlistIcon.title = 'Remove from wishlist';
                    Swal.fire('Added to Wishlist', '', 'success');
                } else {
                    Swal.fire('Error', data.message || 'Failed to add to wishlist', 'error');
                }
            })
            .catch(error => {
                console.error('Error adding to wishlist:', error);
                Swal.fire('Error', 'Unable to connect to the server. Please try again later.', 'error');
            });
        }
    })
    .catch(error => {
        console.error('Error checking authentication:', error);
        Swal.fire('Error', 'Unable to connect to the server. Please try again later.', 'error');
    });
}
            function handleAddToCart(event, productId, price) {
                event.preventDefault();
                event.stopPropagation();
                price = parseFloat(price);
                addPdToCart(event, productId, price, 1);
            }

            function addPdToCart(event, productId, price, quantity = 1) {
                event.preventDefault();
                event.stopPropagation();
                quantity = parseInt(quantity);
                price = parseFloat(price);
                if (isNaN(quantity) || quantity <= 0) {
                    alert('Please enter a valid quantity');
                    return;
                }
                console.log("🛒 Sending to /cart/add:", { productId, price, quantity });
                fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        productId,
                        quantity,
                        price,
                        totalPrice: price * quantity
                    })
                })
                .then(response => response.json())
                .then(data => {
                    console.log("🧾 Server response:", data);
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Added to Cart!',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else {
                        console.error("Server error:", data);
                        Swal.fire({
                            icon: 'error',
                            title: 'Failed',
                            text: data.message || 'Failed to add product to cart'
                        });
                    }
                })
                .catch(error => {
                    console.error('❌ Fetch error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Something went wrong!'
                    });
                });
            }

            function updateActiveWishlistItems() {
                fetch('/check-auth', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (!data.isAuthenticated) {
                        console.log('User not authenticated, skipping wishlist items fetch');
                        return;
                    }
                    fetch('/wishlists/check', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success && data.wishlistItems) {
                            const wishlistIcons = document.querySelectorAll('.wishlist-icon');
                            wishlistIcons.forEach(icon => {
                                const productId = icon.getAttribute('onclick').match(/'([^']+)'/)[1];
                                if (data.wishlistItems.includes(productId)) {
                                    icon.classList.add('active');
                                    icon.title = 'Remove from wishlist';
                                }
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching wishlist items:', error);
                    });
                })
                .catch(error => {
                    console.error('Error checking authentication:', error);
                });
            }

            document.addEventListener('DOMContentLoaded', function() {
                updateActiveWishlistItems();
                document.querySelectorAll('.product-container').forEach(container => {
                    container.addEventListener('click', function(e) {
                        if (!e.target.closest('.add-to-cart') && !e.target.closest('.wishlist-icon')) {
                            const link = this.querySelector('a.product-link');
                            if (link) {
                                window.location.href = link.getAttribute('href');
                            }
                        }
                    });
                });
            });

            function navigateToProduct(event, productId) {
                if (!event.target.closest('.add-to-cart') && !event.target.closest('.wishlist-icon')) {
                    window.location.href = `/product/${productId}`;
                }
            }
        </script>
</body>
</html>

<%- include("../../views/partials/user/footer") %>