
<%- include("../../views/partials/admin/header") %>
<style>
    *{
        scrollbar-width: none;
        margin: 0;
        
    }
</style>


  
  <!-- Customer Stats -->
  <div class="stats-grid">
      <div class="stat-card " style="background-color: #6e6502;">
          <div class="stat-icon">üë•</div>
          <div class="stat-info">
              <h3>Total Customers</h3>
              <div class="value"><%=totalCustomers%></div>
          </div>
      </div>
      <div class="stat-card purple">
          <div class="stat-icon">üí∞</div>
          <div class="stat-info">
              <h3>Avg. Order Value</h3>
              <div class="value"><%=avgOrderValue%></div>
          </div>
      </div>
      <div class="stat-card " style="background-color: #27ae60;">
        <div class="stat-icon">üÜï</div>
        <div class="stat-info">
            <h3>Active Users</h3>
            <div class="value"><%=activeUsers%></div>
        </div>
    </div>
      <div class="stat-card red">
        <div class="stat-icon">üÜï</div>
        <div class="stat-info">
            <h3>Blocked Users</h3>
            <div class="value"><%=blockedUsers%></div>
        </div>
    </div>
  </div>

  <!-- Customer List Section -->
  <div class="product-section">
      <div class="section-header">
          <h2 class="section-title">Customer List</h2>
          <div class="date-filter">
              <input type="text" class="date-input" placeholder="Search customers...">
              <button class="download-btn">
                  <span>Export</span>
                  <span>üì•</span>
              </button>
          </div>
      </div>

      <!-- Customer Table -->
      <table>
          <thead>
              <tr>
                  <th>Customer ID</th>
                  <th>Name</th>
                  <th>Email</th>
                  <th>Phone</th>
                  <th>Status</th>
                  <th>Actions</th>
                  <th>View</th>
                  
              </tr>
          </thead>
          <tbody>
              <%for(let i=0;i< data.length; i++){%>
              <tr>
                  <td><%= data[i]._id %></td>
                  <td>
                      <div style="display: flex; align-items: center; gap: 10px;">
                          <div class="avatar" style="width: 30px; height: 30px; font-size: 12px;">
                            <%= data[i].name.split(' ').map(n => n[0]).join('') %>
                          </div>
                          <%=data[i].name%>
                      </div>
                  </td>
                  <td><%=data[i].email%></td>
                  <td><%=data[i].phone%></td>
                  <td>
                    <% if (!data[i].isBlocked) { %>
                    <span style="
                        padding: 4px 8px;
                        border-radius: 12px;
                        font-size: 12px;
                        font-weight: 500;
                        background-color: rgba(39, 174, 96, 0.1);
                        color: #27ae60;
                    ">
                        Active
                    </span>
                    <% } else { %>
                    <span style="
                        padding: 4px 8px;
                        border-radius: 12px;
                        font-size: 12px;
                        font-weight: 500;
                        background-color: rgba(211, 63, 63, 0.1);
                        color: #d33f3f;
                    ">
                        Blocked
                    </span>
                    <% } %>
                </td>
                                <td>
                        <% if(data[i].isBlocked===false) { %>
                        <button class="action-btn unblock-btn" title="Unblock User" style="
                          padding: 6px 10px;
                          border-radius: 12px;
                          font-size: 14px;
                          font-weight: 500;
                          background-color: rgba(39, 174, 96, 0.1);
                          border: none;
                            background-color: #27ae60;">
                            <a href="/admin/blockCustomer?id=<%=data[i]._id%>" style="text-decoration: none;  color: wheat;">Block</a>
                        </button>
                        <% } else { %>
                        <button class="action-btn block-btn" title="Block User" style="
                        padding: 6px 10px;
                        border-radius: 12px;
                        border: none;
                        font-size: 14px;
                        font-weight: 500;
                        background-color: rgba(39, 174, 96, 0.1);
                        background-color: #d33f3f;
                        
                    ">
                            <a href="/admin/unblockCustomer?id=<%=data[i]._id%>" style="text-decoration: none;  color: wheat;">Unblock</a>
                        </button>
                        <% } %>
                        <!-- <button class="action-btn flag-btn" title="Flag Account">‚ö†Ô∏è</button> -->
                </td>
                  <td>
                      <div style="display: flex; gap: 8px;">
                          <button style="background: none; border: none; cursor: pointer; color: var(--text-primary);" title="View Details">üëÅÔ∏è</button>
                      </div>
                  </td>
              </tr>
              <%}%>
          </tbody>
      </table>

      <!-- Pagination -->
      <div class="pagination">
        <% if(currentPage > 1) { %>
            <button class="page-nav prev" onclick="window.location.href='?page=<%= currentPage - 1 %>'">¬´</button>
        <% } else { %>
            <button class="page-nav prev" disabled>¬´</button>
        <% } %>

        <%for(let i=1;i<= totalPages;i++){%>
            <span class="page-item <%=(i===currentPage) ? 'active' : '' %> ">
                <a class="page-link" href="?page=<%=i%>"> <%=i%> </a>
            </span>
            <%}%>
          <!-- <button>¬´</button>
          <span class="active">1</span>
          <span>2</span>
          <span>3</span>
          <span class="ellipsis">...</span>
          <span>10</span>
          <button>¬ª</button> -->
      </div>
  </div>

  <!-- Customer Details Modal (Hidden by default) -->
  <div id="customer-details-modal" style="
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      align-items: center;
      justify-content: center;
  ">
      <div style="
          background-color: var(--card-bg);
          border-radius: 10px;
          padding: 20px;
          width: 90%;
          max-width: 600px;
          max-height: 90vh;
          overflow-y: auto;
          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
      ">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
              <h2 style="font-size: 1.5rem;">Customer Details</h2>
              <button id="close-modal" style="background: none; border: none; font-size: 1.5rem; cursor: pointer; color: var(--text-primary);">√ó</button>
          </div>
          <div id="customer-detail-content">
              <!-- This will be populated dynamically with JavaScript -->
          </div>
      </div>
  </div>
</div>

<script>

    
  document.addEventListener('DOMContentLoaded', function() {
    // Get the search input element
    const searchInput = document.querySelector('.date-input[placeholder="Search customers..."]');
    
    // Get all the customer rows in the table
    const customerRows = document.querySelectorAll('table tbody tr');
    
    // Add event listener for the input
    searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase().trim();
        
        // Loop through all customer rows
        customerRows.forEach(row => {
            // Get the relevant data to search through
            const customerId = row.cells[0].textContent.toLowerCase();
            const customerName = row.cells[1].textContent.toLowerCase();
            const customerEmail = row.cells[2].textContent.toLowerCase();
            const customerPhone = row.cells[3].textContent.toLowerCase();
            
            // Check if any of the customer data contains the search term
            const matches = 
                customerId.includes(searchTerm) || 
                customerName.includes(searchTerm) || 
                customerEmail.includes(searchTerm) || 
                customerPhone.includes(searchTerm);
            
            // Show or hide the row based on the search result
            if (matches) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
        
        // Update pagination if needed
        // Note: For a complete implementation, you'd need to add pagination logic
        // This is a simple version that just shows/hides rows
    });
    
    // Optional: Add a clear button or reset functionality
    // This would reset the search and show all customers again
    searchInput.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            this.value = '';
            customerRows.forEach(row => {
                row.style.display = '';
            });
        }
    });
});

document.addEventListener('DOMContentLoaded', function() {
    // Search functionality (from previous code)
    const searchInput = document.querySelector('.date-input[placeholder="Search customers..."]');
    const customerRows = document.querySelectorAll('table tbody tr');
    
    searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase().trim();
        
        customerRows.forEach(row => {
            const customerId = row.cells[0].textContent.toLowerCase();
            const customerName = row.cells[1].textContent.toLowerCase();
            const customerEmail = row.cells[2].textContent.toLowerCase();
            const customerPhone = row.cells[3].textContent.toLowerCase();
            
            const matches = 
                customerId.includes(searchTerm) || 
                customerName.includes(searchTerm) || 
                customerEmail.includes(searchTerm) || 
                customerPhone.includes(searchTerm);
            
            if (matches) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });
    
    searchInput.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            this.value = '';
            customerRows.forEach(row => {
                row.style.display = '';
            });
        }
    });
    
    // Export/Download functionality
    const downloadBtn = document.querySelector('.download-btn');
    
    downloadBtn.addEventListener('click', function() {
        // Get visible rows (in case search filter is applied)
        const visibleRows = Array.from(customerRows).filter(row => row.style.display !== 'none');
        
        // Create CSV header
        let csvContent = "Customer ID,Name,Email,Phone,Joined Date,Orders,Status\n";
        
        // Add data from each visible row
        visibleRows.forEach(row => {
            const customerId = row.cells[0].textContent;
            // Extract name text without the avatar element
            const customerName = row.cells[1].textContent.trim();
            const customerEmail = row.cells[2].textContent;
            const customerPhone = row.cells[3].textContent;
            const joinedDate = row.cells[4].textContent;
            const orders = row.cells[5].textContent;
            // Extract status text without span styling
            const status = row.cells[6].querySelector('span').textContent.trim();
            
            // Create CSV row and add to content
            const csvRow = [
                customerId,
                customerName,
                customerEmail,
                customerPhone,
                joinedDate,
                orders,
                status
            ].join(',');
            
            csvContent += csvRow + '\n';
        });
        
        // Create download link
        const encodedUri = encodeURI('data:text/csv;charset=utf-8,' + csvContent);
        const link = document.createElement('a');
        link.setAttribute('href', encodedUri);
        link.setAttribute('download', 'customer_list.csv');
        
        // Trigger download
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    });
}); 


  // Sample JavaScript for handling the modal
  document.addEventListener('DOMContentLoaded', function() {
      const modal = document.getElementById('customer-details-modal');
      const closeModal = document.getElementById('close-modal');
      const viewButtons = document.querySelectorAll('button[title="View Details"]');
      const customerDetailContent = document.getElementById('customer-detail-content');
      
      viewButtons.forEach(button => {
          button.addEventListener('click', function() {
              // Get the customer data from the row
              const row = this.closest('tr');
              const customerId = row.cells[0].textContent;
              const customerName = row.cells[1].textContent.trim();
fetch(`/admin/customers/${customerId}/details`)
    .then(res => res.json())
    .then(data => {
        const joinedDate = new Date(data.createdOn).toLocaleDateString();
        const totalOrders = data.totalOrders || 0;

        customerDetailContent.innerHTML = `
            <div style="display: flex; gap: 20px; margin-bottom: 20px;">
                <div class="avatar" style="width: 80px; height: 80px; font-size: 2rem;">
                    ${data.name.split(' ').map(n => n[0]).join('')}
                </div>
                <div>
                    <h3 style="font-size: 1.3rem; margin-bottom: 5px;">${data.name}</h3>
                    <p style="color: var(--text-secondary); margin-bottom: 10px;">Customer ID: ${data.customerID}</p>
                    <span style="
                        padding: 4px 8px;
                        border-radius: 12px;
                        font-size: 12px;
                        font-weight: 500;
                        background-color: ${data.isBlocked ? 'rgba(231, 76, 60, 0.1)' : 'rgba(39, 174, 96, 0.1)'};
                        color: ${data.isBlocked ? '#e74c3c' : '#27ae60'};
                    ">${data.isBlocked ? 'Blocked' : 'Active'}</span>
                </div>
            </div>

            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 20px;">
                <div>
                    <p style="color: var(--text-secondary); font-size: 0.9rem;">Email</p>
                    <p>${data.email}</p>
                </div>
                <div>
                    <p style="color: var(--text-secondary); font-size: 0.9rem;">Phone</p>
                    <p>${data.phone || '-'}</p>
                </div>
                <div>
                    <p style="color: var(--text-secondary); font-size: 0.9rem;">Joined Date</p>
                    <p>${joinedDate}</p>
                </div>
                <div>
                    <p style="color: var(--text-secondary); font-size: 0.9rem;">Total Orders</p>
                    <p>${totalOrders}</p>
                </div>
            </div>
            ...
        `;

        modal.style.display = 'flex';
    })
    .catch(err => {
        console.error("Failed to load customer data", err);
        customerDetailContent.innerHTML = `<p style="color: red;">Failed to load customer data.</p>`;
        modal.style.display = 'flex';
    });

              
              modal.style.display = 'flex';
          });
      });
      
      closeModal.addEventListener('click', function() {
          modal.style.display = 'none';
      });
      
      // Close modal when clicking outside of it
      window.addEventListener('click', function(event) {
          if (event.target === modal) {
              modal.style.display = 'none';
          }
      });
  });
</script>

<%- include("../../views/partials/admin/footer") %>